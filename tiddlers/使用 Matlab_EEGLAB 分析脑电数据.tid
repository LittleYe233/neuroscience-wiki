created: 20241024130037529
creator: LittleYe233
modified: 20241025020614579
modifier: LittleYe233
tags: Articles EEG Neuroimaging
title: 使用 Matlab/EEGLAB 分析脑电数据
type: text/vnd.tiddlywiki

本文参考 https://blog.csdn.net/weixin_46570668/article/details/117112425。

!! 安装 EEGLAB

下载地址：https://sccn.ucsd.edu/eeglab/download.php

下载完成后，将工具包文件夹复制到任意位置（例如 ``MATLAB/版本号/toolbox``），启动 Matlab，``主页 -> 环境 -> 设置路径``，定位到工具包文件夹。在命令行窗口输入 ``eeglab`` 执行打开 EEGLAB。

[img[EEGLAB_mainscreen.png]]

!! 准备工作

点击 ``File -> Manage EEGLAB extensions``，安装 ERPLAB 插件。

[img[EEGLAB_install_ERPLAB.png]]

!! 数据预处理

!!! 导入数据

点击 ``File -> Import data -> Using EEGLAB functions and plugins -> From Neuroscan .CNT file`` 导入数据，在打开的窗口使用默认设置，并给数据集命名，然后保存为 *.set 数据集文件方便使用。观察数据集相关信息如下图所示：

[img[EEGLAB_import_dataset.png]]

!!! 添加电极定位

点击 ``Edit -> Channel locations``，打开的窗口使用默认设置，点击“Ok”。

[img[EEGLAB_channel_locations_0.png]]

[img[EEGLAB_channel_locations.png]]

点击 ``Plot -> Channel locations -> By name``，查看电极定位图：

[img[EEGLAB_channel_location_plot.png]]

此时主界面上 Channel locations 已经变成 Yes。

!!! 设置重参考

点击 ``Tools -> Re-reference the data``，因为没有合适的参考频道，故使用平均参考：

[img[EEGLAB_reference.png]]

可以在此时保存新的数据集方便使用。此时主界面的 Reference 已经变为 average。

!!! 滤波

我们需要滤除较低频率分量包含直流分量，以及滤除 48~52Hz 的频率分量（''功频干扰''？）。点击 ``Tools -> Filter the data -> Basic FIR filter (new，default)``，在“Lower edge of the frequency pass band”里输入“0.4”滤除低频分量，在“Higher edge of the frequency pass band”里输入“48”滤除高频分量，点击“Ok”。此时 EEGLAB 会绘制滤波器的幅频和相频特性曲线，观察到与我们的预期一致。

[img[EEGLAB_filter.png]]

此时可以保存数据集。

!!! 去除杂段

点击 ``Plot -> Channel data (scroll)``，绘制 EEG 波形，界面如下图所示。

[img[EEGLAB_channel_data_scroll.png]]

图中已经标记出各个时刻对应的事件类型。手动去除杂乱的波段并“REJECT”。

!!! ICA 分解数据

点击 ``Tools -> Decompose data by ICA``，使用默认的“Extended Infomax”算法，点击“Ok”。

[img[EEGLAB_runica.png]]

如果后续弹出数据矩阵的秩与通道数不一致的窗口，直接点击“Ok”即可。

此时打开 Matlab 命令行窗口，可以看到后台正在执行 ``runica()`` 函数。预计会执行 400 个左右的 steps。

[img[EEGLAB_runica_cmd_window.png]]

此时 EEGLAB 主界面上 ICA weights 已变为 Yes。

点击 ``Tools -> Inspect/label components by map``，查看每个频道的脑图。接下来的窗口保持默认设置。

[img[EEGLAB_inspect_label_components_by_map.png]]

观察到大致没有明显异常的通道，均保留。

!!! 去除伪迹

点击 ``Tools -> Classify components using ICLabel -> Label components``，弹出的窗口皆使用默认设置。

[img[EEGLAB_label_components.png]]

只保留标记为 Brain 的通道。点击 ``Tools -> Remove components from data``，在“Or list of componet(s) to retain”中填写标记为 Brain 的通道，例如“[2,3,7,8,9,11,12,13,17,18,22]”，在确认窗口点击“Accept”。此时可以保存数据集。

!! 数据处理

!!! 创建事件清单

点击 ``ERPLAB -> EventList -> Create EEG EVENTLIST``，将事件清单同时保存到本地文本文件中，其他保持默认，点击“CREATE”。此时可以保存数据集。事件清单的部分内容如下（用户名已隐去）：

```text
#  Non-editable header begin --------------------------------------------------------------------------------
# 
#  data format...............: continuous
#  setname...................: Acquisition 21 Data -p300 referenced FIR pruned with ICA_elist
#  filename..................: Acquisition 21 Data -p300 referenced FIR pruned with ICA.set
#  filepath..................: C:\Users\<Username>\EEGLab
#  nchan.....................: 23
#  pnts......................: 783900
#  srate.....................: 1000
#  nevents...................: 770
#  generated by (bdf)........: 
#  generated by (set)........: Acquisition 21 Data -p300 referenced FIR pruned with ICA_elist
#  reported in ..............: 
#  prog Version..............: 12.00
#  creation date.............: 25-Oct-2024 09:37:08
#  user Account..............: 
# 
#  Non-editable header end --------------------------------------------------------------------------------




# item	 bepoch	  ecode	            label	      onset	          diff	     dura	b_flags	   a_flags	  enable	    bin
#                                                 (sec)           (msec)     (msec)    (binary)   (binary)


1     	0     	     10	              ""	      0.9630	      0.00	    0.0	    00000000     00000000	   1	[       ]
2     	0     	      1	              ""	      1.2400	    277.00	    0.0	    00000000     00000000	   1	[       ]
3     	0     	     10	              ""	      2.1220	    882.00	    0.0	    00000000     00000000	   1	[       ]
4     	0     	      1	              ""	      2.4960	    374.00	    0.0	    00000000     00000000	   1	[       ]
5     	0     	     20	              ""	      3.2690	    773.00	    0.0	    00000000     00000000	   1	[       ]
6     	0     	     20	              ""	      4.3880	   1119.00	    0.0	    00000000     00000000	   1	[       ]
7     	0     	     20	              ""	      5.5210	   1133.00	    0.0	    00000000     00000000	   1	[       ]
8     	0     	     20	              ""	      6.4940	    973.00	    0.0	    00000000     00000000	   1	[       ]
9     	0     	     20	              ""	      7.4540	    960.00	    0.0	    00000000     00000000	   1	[       ]
10    	0     	     20	              ""	      8.4940	   1040.00	    0.0	    00000000     00000000	   1	[       ]
```

!!! 事件分类

我们需要把事件分类到各个 bin 中。首先在本地创建一个存放 bin 信息的文件，文件内容类似如下：

```text
Bin 1
num2
.{10}

Bin 2
num8
.{20}

Bin 3
pic
.{1}
```

意思是，“Bin 1”将包含事件类型为 10 的事件，并标记为“num2”，以此类推。保存好之后，点击 ``ERPLAB -> Assign bins (BINLISTER)``，在上方“Load Bin Descriptor File From”中选择写好的 bin 文件，其他保持默认（这将会覆盖原事件清单文件），点击“RUN”。此时可以保存数据集（有两次，可以都用相同的名字）。

再查看事件清单文件，发现已经在每行末尾对事件进行了分类：

```text
# item	 bepoch	  ecode	            label	      onset	          diff	     dura	b_flags	   a_flags	  enable	    bin
#                                                 (sec)           (msec)     (msec)    (binary)   (binary)


1     	0     	     10	              ""	      0.9630	      0.00	    0.0	    00000000     00000000	   1	[      1]
2     	0     	      1	              ""	      1.2400	    277.00	    0.0	    00000000     00000000	   1	[      3]
3     	0     	     10	              ""	      2.1220	    882.00	    0.0	    00000000     00000000	   1	[      1]
4     	0     	      1	              ""	      2.4960	    374.00	    0.0	    00000000     00000000	   1	[      3]
5     	0     	     20	              ""	      3.2690	    773.00	    0.0	    00000000     00000000	   1	[      2]
6     	0     	     20	              ""	      4.3880	   1119.00	    0.0	    00000000     00000000	   1	[      2]
7     	0     	     20	              ""	      5.5210	   1133.00	    0.0	    00000000     00000000	   1	[      2]
8     	0     	     20	              ""	      6.4940	    973.00	    0.0	    00000000     00000000	   1	[      2]
9     	0     	     20	              ""	      7.4540	    960.00	    0.0	    00000000     00000000	   1	[      2]
10    	0     	     20	              ""	      8.4940	   1040.00	    0.0	    00000000     00000000	   1	[      2]
```

!!! 事件分段并处理

点击 ``ERPLAB -> Extract bin-based epochs``，在上方的时间段设置中设为“-100 1000”（从先前的 EEG 图中判断得到的时间段设置，表示在每个事件前 100ms 和后 1000ms 会纳入分段中）。

[img[EEGLAB_extract_bin_based_epochs.png]]

此时可以保存数据集。

然后对其叠加平均。点击 ``ERPLAB -> Compute averaged ERPs``，它将默认选择最新创建/导入的数据集，保持默认设置即可。

[img[EEGLAB_compute_average_erps.png]]

接下来的窗口会创建新的 erpset，设置一个名字，其他保持默认即可。

!!! 绘图

点击 ``ERPLAB -> Plot ERP -> Plot ERP waveforms``，保持默认设置，点击“PLOT”。

[img[EEGLAB_plot_erp.png]]

[img[EEGLAB_plot_erp_result.png]]